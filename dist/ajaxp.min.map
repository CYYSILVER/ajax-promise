{"version":3,"sources":["webpack://ajaxp/webpack/universalModuleDefinition","webpack://ajaxp/webpack/bootstrap","webpack://ajaxp/./src/helpers/util.js","webpack://ajaxp/./src/index.js","webpack://ajaxp/./src/core/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getParams","data","queryStr","param","push","concat","encodeURIComponent","join","convertIfJson","str","JSON","parse","error","createOptions","options","arguments","length","undefined","url","assign","method","dataType","async","cache","timeout","baseURL","concatBaseURLAndURL","slice","require","send","ajaxRequestWithData","ajaxRequestWithoutData","ajaxp","ajax","param1","param2","request","_this$options","this","forEach","head","post","put","patch","core","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","headersObj","getAllResponseHeaders","trim","split","index","matches","match","response","config","statusText","headers","Error","params","toUpperCase","open","setRequestHeader","type"],"mappings":"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","file":"ajaxp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ajaxp\"] = factory();\n\telse\n\t\troot[\"ajaxp\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = {\r\n  /**\r\n   * 将Object格式转换为查询字符串，如{a:1} => a=1\r\n   *\r\n   * @param {Object} data 数据\r\n   * @returns {String} 查询字符串\r\n   */\r\n  getParams(data) {\r\n    let queryStr = [] // 返回字符串\r\n    for (let param in data) {\r\n      queryStr.push(`${encodeURIComponent(param)}=${encodeURIComponent(data[param])}`)\r\n    }\r\n    return queryStr.join('&')\r\n  },\r\n\r\n  /**\r\n   * 如果是json格式字符串，则返回object，否则不改变原字符串\r\n   *\r\n   * @param {String} str\r\n   * @returns {Object | String}\r\n   */\r\n  convertIfJson(str) {\r\n    try {\r\n      return JSON.parse(str)\r\n    } catch (error) {\r\n      return str\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 混合默认ajax配置与新的ajax配置\r\n   *\r\n   * @param {*} options 新的配置\r\n   * @returns {Object} 混合后的配置\r\n   */\r\n  createOptions(options = {}, url = '', data = {}) {\r\n    options = Object.assign(\r\n      {\r\n        method: 'GET',\r\n        url: '',\r\n        data: {},\r\n        dataType: 'json',\r\n        async: true,\r\n        cache: true,\r\n        timeout: 0,\r\n        baseURL: ''\r\n      },\r\n      options,\r\n      {\r\n        url: url,\r\n        data: data\r\n      }\r\n    )\r\n    return options\r\n  },\r\n\r\n  /**\r\n   * 用于连接格式化url字符串，比如http://localhost:3000与students连接为\r\n   * http://localhost:3000/students\r\n   * \r\n   * @param {String} baseURL  \r\n   * @param {String} url \r\n   * @returns {String} 格式后的url字符串\r\n   */\r\n  concatBaseURLAndURL(baseURL, url) {\r\n    if (baseURL[baseURL.length-1] !== '/') {\r\n      baseURL = baseURL + '/'\r\n    }\r\n    if (url[0] === '/') {\r\n      url = url.slice(1)\r\n    }\r\n    return baseURL+url\r\n  },\r\n\r\n \r\n}\r\n","const { send, ajaxRequestWithData, ajaxRequestWithoutData } = require('./core/index')\r\nconst { createOptions, concatBaseURLAndURL } = require('./helpers/util')\r\nconst ajaxp = /** @class */ (function() {\r\n \r\n \r\n \r\n  /**\r\n   * 直接发送ajax请求，相关配置以options为参数传入\r\n   *\r\n   * @param {Obejct} options ajax请求配置\r\n   * @returns {Promise}\r\n   */\r\n  function ajax(param1, param2) {\r\n    let options = param2 || param1\r\n    let url = param2 ? param1 : ''\r\n    options = createOptions(options, url)\r\n    return send(options)\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * 创建ajaxp实列对象，使用Object.create方法\r\n   *\r\n   * @param {Object} options 要传入的配置参数\r\n   * @returns {Object} ajaxp对象\r\n   */\r\n  ajax.create = function(options) {\r\n    let o = Object.create(ajax.prototype)\r\n    o.options = createOptions(options)\r\n    createOptions()\r\n    return o\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * 发送请求，方法为config.method\r\n   *\r\n   * @param {String} url url地址\r\n   * @param {Object} options 其他选项，该选项优先级高于实例选项\r\n   * @returns {Promise}\r\n   */\r\n  ajax.prototype.request = function(url, options) {\r\n    let { baseURL, method } = this.options\r\n    options = Object.assign({}, this.options, options)\r\n    return ajax[method](concatBaseURLAndURL(baseURL, url), options)\r\n  }\r\n\r\n\r\n\r\n  ;['get', 'delete', 'head'].forEach(method => {\r\n    /**\r\n     * ajax GET\\DELETE\\HEAD请求\r\n     *\r\n     * @param {String} url url地址\r\n     * @param {Object} options 其他选项，该选项优先级高于实例选项\r\n     * @returns {Promise}\r\n     */\r\n    ajax.prototype[method] = function(url, options) {\r\n      let { baseURL } = this.options\r\n      options = Object.assign({}, this.options, options)\r\n      return ajax[method](concatBaseURLAndURL(baseURL, url), options)\r\n    }\r\n  })\r\n\r\n\r\n\r\n  ;['post', 'put', 'patch'].forEach(method => {\r\n    /**\r\n     * ajax POST\\PUT\\PATCH 请求\r\n     *\r\n     * @param {String} url url地址\r\n     * @param {Object} data 数据\r\n     * @param {Object} options 其他选项，该选项优先级高于实例选项\r\n     * @returns {Promise}\r\n     */\r\n    ajax.prototype[method] = function(url, data, options) {\r\n      let { baseURL } = this.options\r\n      options = Object.assign({}, this.options, options)\r\n      return ajax[method](concatBaseURLAndURL(baseURL, url), data, options)\r\n    }\r\n  })\r\n\r\n\r\n\r\n  /**\r\n   * ajax GET\\DELETE\\HEAD请求\r\n   *\r\n   * @param {String} url url地址\r\n   * @param {Object} options 其他选项\r\n   * @returns {Promise}\r\n   */\r\n  ajax.get = ajaxRequestWithoutData('GET')\r\n  ajax.delete = ajaxRequestWithoutData('DELETE')\r\n  ajax.head = ajaxRequestWithoutData('HEAD')\r\n\r\n\r\n  \r\n  /**\r\n   * ajax POST\\PUT\\PATCH 请求\r\n   *\r\n   * @param {String} url url地址\r\n   * @param {Object} data 数据\r\n   * @param {Object} options 其他选项\r\n   * @returns {Promise}\r\n   */\r\n  ajax.post = ajaxRequestWithData('POST')\r\n  ajax.put = ajaxRequestWithData('PUT')\r\n  ajax.patch = ajaxRequestWithData('PATCH')\r\n\r\n  return ajax\r\n})()\r\n\r\nmodule.exports = ajaxp\r\n","const { convertIfJson, getParams, createOptions } = require('../helpers/util')\r\nlet core = {\r\n  send(options) {\r\n    return new Promise((resolve, reject) => {\r\n      let xhr = new XMLHttpRequest()\r\n      xhr.onreadystatechange = function() {\r\n        if (xhr.readyState == 4) {\r\n          if (xhr.status >= 200 && xhr.status < 300) {\r\n            // 将响应封装为对象\r\n            let headersObj = {}\r\n            let headers = xhr.getAllResponseHeaders()\r\n            headers\r\n              .trim('\\n')\r\n              .split('\\n')\r\n              .forEach((param, index) => {\r\n                let matches = param.match(/(.*?): (.*)/)\r\n                let key = matches[1]\r\n                let value = matches[2]\r\n                headersObj[key] = value\r\n              })\r\n\r\n            let response = {\r\n              data: convertIfJson(xhr.response), // 转换为Object，如果为Json格式的h话\r\n              config: options,\r\n              status: xhr.status,\r\n              statusText: xhr.statusText,\r\n              headers: headersObj,\r\n              request: xhr\r\n            }\r\n\r\n            resolve(response)\r\n          } else {\r\n            reject(new Error(`Request failed with status code ${xhr.status}`))\r\n          }\r\n        }\r\n      }\r\n\r\n      // 获取参数\r\n      let { method, async, url, data, timeout } = options\r\n      // 将传入参数转化为查询字符\r\n      let params = getParams(data)\r\n      method = method.toUpperCase()\r\n      xhr.timeout = timeout\r\n      if (method.match(/^(?:GET|DELETE|HEAD)$/)) {\r\n        xhr.open(method, params ? `${url}?${params}` : `${url}`, async)\r\n        xhr.send(null)\r\n      } else if (method.match(/^(?:POST|PUT|PATCH)/)) {\r\n        xhr.open(method, url, async)\r\n        xhr.setRequestHeader('Content-Type', 'application/json')\r\n        xhr.send(params)\r\n      }\r\n      // TODO: method不支持错误处理\r\n    })\r\n  },\r\n  ajaxRequestWithData(type) {\r\n    return (url, data, options) => {\r\n      options = createOptions(options, url, data)\r\n      options.method = type\r\n      return core.send(options)\r\n    }\r\n  },\r\n  ajaxRequestWithoutData(type) {\r\n    return (url, options) => {\r\n      options = createOptions(options, url)\r\n      options.method = type\r\n      return core.send(options)\r\n    }\r\n  }\r\n}\r\nmodule.exports = core"],"sourceRoot":""}